git-tfs is a two-way bridge between TFS and git, similar to git-svn.

To use, you need to get the source, build it, and then fetch from TFS to
git.

git-tfs was developed using .NET 3.5 and VS 2008. It uses the TFS 2008
client libraries. All other dependencies are stored in the repository.
From the root directory of the repository, you should be able to run this:
> msbuild GitTfs.sln

To fetch, you can do this:
# git init    (optional)
# git tfs init http://tfs:8080 $/some_project
# git tfs fetch

If you do "git tfs clone" instead of "git tfs init", you won't need to do
the initial fetch.

If you do "git tfs quick-clone" instead of "git tfs clone", git-tfs won't
pull all the history from TFS. This is intended for developer private
branches. "git tfs fetch" should still work, but you won't want to
push/pull from other repositories that were independently cloned with
git-tfs.

The shelve command replicates your changes in a shelveset in TFS. By default,
it will shelve the current HEAD.
# git tfs shelve SOME_SHELVESET
# git tfs shelve SOME_SHELVESET some-treeish

Help is available on the command line. Use "-h" with any command to see a
description of the relevant options.

I've only tried it out with the TFS 2008 client libraries. I intend to
make this work transparently with TFS 2005 or the codeplex client libs at
some point.
